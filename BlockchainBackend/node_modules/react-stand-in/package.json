{
  "_args": [
    [
      {
        "raw": "react-stand-in@^4.0.0-beta.18",
        "scope": null,
        "escapedName": "react-stand-in",
        "name": "react-stand-in",
        "rawSpec": "^4.0.0-beta.18",
        "spec": ">=4.0.0-beta.18 <5.0.0",
        "type": "range"
      },
      "C:\\Users\\anees\\VeriFire\\BlockchainBackend\\node_modules\\react-hot-loader"
    ]
  ],
  "_from": "react-stand-in@>=4.0.0-beta.18 <5.0.0",
  "_id": "react-stand-in@4.0.0-beta.21",
  "_inCache": true,
  "_location": "/react-stand-in",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-stand-in-4.0.0-beta.21.tgz_1517819028480_0.7946214443072677"
  },
  "_npmUser": {
    "name": "neoziro",
    "email": "berge.greg@gmail.com"
  },
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-stand-in@^4.0.0-beta.18",
    "scope": null,
    "escapedName": "react-stand-in",
    "name": "react-stand-in",
    "rawSpec": "^4.0.0-beta.18",
    "spec": ">=4.0.0-beta.18 <5.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/react-hot-loader"
  ],
  "_resolved": "https://registry.npmjs.org/react-stand-in/-/react-stand-in-4.0.0-beta.21.tgz",
  "_shasum": "fb694e465cb20fab7f36d3284f82b68bbd7a657e",
  "_shrinkwrap": null,
  "_spec": "react-stand-in@^4.0.0-beta.18",
  "_where": "C:\\Users\\anees\\VeriFire\\BlockchainBackend\\node_modules\\react-hot-loader",
  "author": {
    "name": "Anton Korzunov",
    "email": "thekashey@gmail.com"
  },
  "dependencies": {
    "shallowequal": "^1.0.2"
  },
  "description": "Proxies ES6 React components without unmounting or losing their state.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "fb694e465cb20fab7f36d3284f82b68bbd7a657e",
    "tarball": "https://registry.npmjs.org/react-stand-in/-/react-stand-in-4.0.0-beta.21.tgz"
  },
  "files": [
    "lib"
  ],
  "homepage": "https://github.com/gaearon/react-hot-loader",
  "keywords": [
    "react-proxy"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "gaearon",
      "email": "dan.abramov@gmail.com"
    },
    {
      "name": "neoziro",
      "email": "berge.greg@gmail.com"
    },
    {
      "name": "kashey",
      "email": "thekashey@gmail.com"
    }
  ],
  "name": "react-stand-in",
  "optionalDependencies": {},
  "readme": "# React Stand-In (Facade) [![build status](https://img.shields.io/travis/thekashey/react-stand-in/master.svg?style=flat-square)](https://travis-ci.org/thekashey/react-stand-in) [![npm version](https://img.shields.io/npm/v/react-stand-in.svg?style=flat-square)](https://www.npmjs.com/package/react-stand-in)\n\nA successor of [react-proxy](https://github.com/gaearon/react-proxy), created\nespecially for react-hot-loader case. From API point of view - this **is**\nreact-proxy.\n\nThe differences from react-proxy:\n\n* does not proxy or wrap source component, but inherits from and replaces it.\n* may replace the base class with the latest class variant.\n* applies changes made in constructor\n\n### How it works\n\nReact stand in is a real stand in. To satisfy goal it:\n\n1. Inherits from the base class, keeping the all `real` method in prototype\n2. On HMR it **replaces** the class prototype by the new component. Now it\n   inherits from the new class variant.\n3. To pass the babel's runtime checks it also replaces prototype of the base\n   class.\n4. It copies over all static fields from a new class variant.\n5. It creates a new and the old class, checking of some class member are\n   changed, creating the `upgrade` list.\n6. On a construction, or unevolded component render it applies the upgrade list.\n\nThe keys points from here, **you should keep in mind**.\n\n* Point 3 means than in es2015 env stand-in WILL have a sideeffect on the base\n  class, **soiling it by the new code**. As long the old class have been just\n  replaced by a new one - this is ok.\n* Point 6 means than you will always instance the `first` class, and next\n  upgrating it to the last one. There is no way to replace constructor for ES6\n  classes.\n\n## Requirements\n\n* React 0.15+\n\n## Usage\n\nIntended to be used from hot reloading tools like React Hot Loader.\\\nIf you’re an application developer, it’s unlikely you’ll want to use it directly.\n\nYou will need something like\n[react-deep-force-update](https://github.com/gaearon/react-deep-force-update) to\nre-render the component tree after applying the update.\n\n```js\nimport React, { Component } from 'react'\n\nclass ComponentVersion1 extends Component {\n  render() {\n    return <div>Before hot update.</div>\n  }\n}\n\nclass ComponentVersion2 extends Component {\n  render() {\n    return <div>After hot update.</div>\n  }\n}\n```\n\nWithout React Proxy:\n\n```js\nconst rootEl = document.getElementById('root')\nReact.render(<ComponentVersion1 />, rootEl)\n\n// Will reset state and kill DOM :-(\nReact.render(<ComponentVersion2 />, rootEl)\n```\n\nWith React Facade:\n\n```js\nimport React from 'react'\nimport { render } from 'react-dom'\nimport createProxy from 'react-stand-in'\nimport deepForceUpdate from 'react-deep-force-update'\n\n// Create a proxy object, given the initial React component class.\nconst proxy = createProxy(ComponentVersion1)\n\n// Obtain a React class that acts exactly like the initial version.\n// This is what we'll use in our app instead of the real component class.\nconst Proxy = proxy.get()\n\n// Render the component (proxy, really).\nconst rootInstance = render(<Proxy />, rootEl)\n\n// Point the proxy to the new React component class by calling update().\n// Instances will stay mounted and their state will be intact, but their methods will be updated.\nproxy.update(ComponentVersion2)\n\n// Force-update the whole React component tree.\n// Until React provides an official DevTools API to do this,\n// you should keep the reference to the root instance(s).\ndeepForceUpdate(rootInstance)\n```\n\n## Features (~99% React-proxy)\n\n* Supports only modern (ES6 classes) style\n* Supports inherited and base classes (although you shouldn’t use inheritance\n  with React)\n* Contains an extensive test suite to avoid regressions\n* Preserves `displayName`\n* Preserves enumerability and writability of methods\n* Preserves `toString()` of methods\n* Replaces instance getters and setters\n* Replaces instance methods preserving their identity\n* Replaces bound instance methods preserving their identity\n* Because identity is preserved, instance methods already scheduled for\n  `setInterval` or `setTimeout` are updated\n* Replaces static getters and setters\n* Replaces unbound static methods\n* Replaces static properties unless they were overwritten by code\n* Sets up `this.constructor` to match the most recent class\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/gaearon/react-hot-loader/tree/master/packages/react-stand-in"
  },
  "version": "4.0.0-beta.21"
}
